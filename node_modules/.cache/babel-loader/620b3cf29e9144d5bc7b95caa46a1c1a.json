{"ast":null,"code":"export const ADD_DATA = \"ADD_DATA\";\nexport const SORTH = \"SORTH\";\nexport const SORTL = \"SORTL\";\nexport const adddata = data => {\n  return {\n    type: ADD_DATA,\n    payload: data\n  };\n};\nexport const sorth = data => {\n  return {\n    type: SORTH,\n    payload: data\n  };\n};\nexport const sortl = data => {\n  return {\n    type: SORTL,\n    payload: data\n  };\n};\nexport const getData = () => {\n  return async (dispatch, getState, api) => {\n    try {\n      let res = await fetch(\"http://localhost:8080/cities\");\n      let data = await res.json();\n      dispatch(adddata(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const postData = data => {\n  return async (dispatch, getState, api) => {\n    try {\n      await fetch(\"http://localhost:8080/cities\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch(getData());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const Delete = id => {\n  return async (dispatch, getState, api) => {\n    try {\n      await fetch(`http://localhost:8080/cities/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch(getData());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n_c = Delete;\nexport const Patch = (data, id) => {\n  return async (dispatch, getState, api) => {\n    try {\n      await fetch(`http://localhost:8080/cities/${id}`, {\n        method: \"PATCH\",\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch(getData());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n_c2 = Patch;\nexport const Filter = value => {\n  if (value === \"All\") {\n    return getData();\n  }\n\n  return async (dispatch, getState, api) => {\n    try {\n      let res = await fetch(`http://localhost:8080/cities?country=${value}`);\n      let data = await res.json();\n      dispatch(adddata(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n_c3 = Filter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Delete\");\n$RefreshReg$(_c2, \"Patch\");\n$RefreshReg$(_c3, \"Filter\");","map":{"version":3,"names":["ADD_DATA","SORTH","SORTL","adddata","data","type","payload","sorth","sortl","getData","dispatch","getState","api","res","fetch","json","error","console","log","postData","method","body","JSON","stringify","headers","Delete","id","Patch","Filter","value"],"sources":["E:/City-Country-main/src/redux/action.js"],"sourcesContent":["export const ADD_DATA=\"ADD_DATA\"\nexport const SORTH=\"SORTH\"\nexport const SORTL=\"SORTL\"\nexport const adddata=(data)=>{\n    return {\n        type:ADD_DATA,\n        payload:data\n    }\n}\nexport const sorth=(data)=>{\n       return {\n           type:SORTH,\n           payload:data\n       }\n}\n\nexport const sortl=(data)=>{\n    return {\n        type:SORTL,\n        payload:data\n    }\n}\n\n\nexport const getData=()=>{\n    return async(dispatch, getState, api) => {\n         try {\n             let res=await fetch(\"http://localhost:8080/cities\")\n             let data=await res.json()\n             dispatch(adddata(data))\n         } \n         catch (error) {\n            console.log(error)\n         }\n      }\n}\nexport const postData=(data)=>{\n    return async(dispatch, getState, api) => {\n        try {\n             await fetch(\"http://localhost:8080/cities\",{\n                    method:\"POST\",\n                    body:JSON.stringify(data),\n                    headers:{\n                        'Content-Type': 'application/json'\n                    }\n            })\n            \n            dispatch(getData())\n        } \n        catch (error) {\n            console.log(error)\n        }\n     }\n   \n\n}\nexport const Delete=(id)=>{\n    return async(dispatch, getState, api) => {\n        try {\n            await fetch(`http://localhost:8080/cities/${id}`,{\n                    method:\"DELETE\",\n                   \n                    headers:{\n                        'Content-Type': 'application/json'\n                    }\n            })\n            \n            dispatch(getData())\n        } \n        catch (error) {\n            console.log(error)\n        }\n\n}\n}\n\nexport const Patch=(data,id)=>{\n    return async(dispatch, getState, api) => {\n        try {\n            await fetch(`http://localhost:8080/cities/${id}`,{\n                    method:\"PATCH\",\n                    body:JSON.stringify(data),\n                   \n                    headers:{\n                        'Content-Type': 'application/json'\n                    }\n            })\n            \n            dispatch(getData())\n        } \n        catch (error) {\n            console.log(error)\n        }\n}\n}\n\nexport const Filter=(value)=>{\n    if(value===\"All\"){\n        return getData()\n    }\n    return async(dispatch, getState, api) => {\n        try {\n            let res=await fetch(`http://localhost:8080/cities?country=${value}`)\n            let data=await res.json()\n            dispatch(adddata(data))\n        } \n        catch (error) {\n           console.log(error)\n        }\n     }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}